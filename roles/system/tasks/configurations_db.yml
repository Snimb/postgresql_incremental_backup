- name: Ensure the backup server's hostname is resolvable
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ backup_server_ip }} {{ backup_server_name }}"
    state: present
  become_method: ansible.builtin.sudo

- name: Ensure the backup server's hostname is resolvable
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ db_ip }} {{ db_name }}"
    state: present
  become_method: ansible.builtin.sudo
    
- name: Open port 5432 on the firewall (PostgreSQL)
  ansible.builtin.command:
    cmd: "firewall-cmd --add-port=5432/tcp --permanent"
  become_method: ansible.builtin.sudo

- name: Reload firewall to apply changes
  ansible.builtin.command:
    cmd: "firewall-cmd --reload"
  become_method: ansible.builtin.sudo

- name: Set database parameters
  ansible.builtin.command:
    cmd: "{{ pgbin }}/psql -c \"{{ item }}\""
  become_user: "{{ pguser }}"
  with_items:
   - "{{ database_parameters }}"

- name: Allow backup server to connect for replication in pg_hba.conf
  ansible.builtin.lineinfile:
    path: "{{ pgdata }}/pg_hba.conf"
    insertafter: EOF
    line: "host    replication     {{ backupuser }}          {{ backup_server_ip }}/32       trust"
    state: present
  become_user: "{{ pguser }}"

- name: Set localhost trust for pguser
  ansible.builtin.lineinfile:
    path: "{{ pgdata }}/pg_hba.conf"
    insertafter: '^# IPv4 local connections:'  
    line: 'host    all             {{ pguser }}        {{ pghost }}               trust'
    state: present
  become_user: "{{ pguser }}"

- name: Restart for PostgreSQL configuration
  ansible.builtin.command:
    cmd: "{{ pgbin }}/pg_ctl restart -D {{ pgdata }}"
  become_user: "{{ pguser }}"