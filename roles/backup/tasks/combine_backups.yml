# Step 1: Identify the latest full backup directory
- name: Get the Latest Full Backup Directory
  ansible.builtin.shell: |
    ls -td {{ pgbkup }}/full* 2>/dev/null | head -n 1
  register: latest_full_backup
  retries: 3
  delay: 10
  until: latest_full_backup.rc == 0

- name: Debug the latest full backup directory
  ansible.builtin.debug:
    msg: "Latest full backup directory: {{ latest_full_backup.stdout }}"

# Step 2: Create and extract the full backup to a temporary directory
- name: Create temporary directory for extracted full backup
  ansible.builtin.tempfile:
    state: directory
    suffix: _full_extracted
  register: temp_full_backup_dir

- name: Extract the Full Backup
  ansible.builtin.shell: |
    tar -xzf {{ latest_full_backup.stdout }}/base.tar.gz -C {{ temp_full_backup_dir.path }}
    if [ -f "{{ latest_full_backup.stdout }}/pg_wal.tar.gz" ]; then
      mkdir -p {{ temp_full_backup_dir.path }}/pg_wal
      tar -xzf {{ latest_full_backup.stdout }}/pg_wal.tar.gz -C {{ temp_full_backup_dir.path }}/pg_wal
    fi
  when: latest_full_backup.stdout | length > 0

- name: Copy full backup manifest
  ansible.builtin.copy:
    src: "{{ latest_full_backup.stdout }}/backup_manifest"
    dest: "{{ temp_full_backup_dir.path }}/backup_manifest"
    remote_src: yes
  when: latest_full_backup.stdout | length > 0

# Step 3: Identify and extract incremental backups
- name: Get List of Incremental Backup Directories
  ansible.builtin.shell: |
    ls -trd {{ latest_full_backup.stdout }}/incremental_* 2>/dev/null
  register: incremental_backups

- name: Debug the list of incremental backups
  ansible.builtin.debug:
    msg: "Incremental backup directories: {{ incremental_backups.stdout_lines }}"

- name: Create temporary directories for each incremental backup and extract (including pg_wal.tar.gz)
  ansible.builtin.shell: |
    temp_dir=$(mktemp -d /tmp/incremental_extracted_XXXX)
    tar -xzf {{ item }}/base.tar.gz -C $temp_dir
    if [ -f "{{ item }}/pg_wal.tar.gz" ]; then
      mkdir -p $temp_dir/pg_wal
      tar -xzf {{ item }}/pg_wal.tar.gz -C $temp_dir/pg_wal
    fi
    echo $temp_dir
  loop: "{{ incremental_backups.stdout_lines }}"
  register: extracted_incrementals

# Step 4: Copy backup manifests from incremental backups to their respective extracted directories
- name: Copy incremental backup manifests
  ansible.builtin.copy:
    src: "{{ item.0 }}/backup_manifest"
    dest: "{{ item.1.stdout }}/backup_manifest"
    remote_src: yes
  with_together:
    - "{{ incremental_backups.stdout_lines }}"
    - "{{ extracted_incrementals.results }}"
  when: extracted_incrementals is defined

- name: Debug the extracted incremental directories
  ansible.builtin.debug:
    msg: "Extracted incremental backup directories: {{ extracted_incrementals.results | map(attribute='stdout') | list }}"

- name: Ensure combined_dir does not exist
  ansible.builtin.file:
    path: "{{ pgbkup }}/full_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"
    state: absent

# Step 6: Combine Full and Incremental Backups into a New Full Backup
- name: Combine Full and Incremental Backups into a New Full Backup
  ansible.builtin.shell: |
    combined_dir={{ pgbkup }}/full_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}
    mkdir -p $combined_dir
    pg_combinebackup --output=$combined_dir {{ temp_full_backup_dir.path }} {{ extracted_incrementals.results | map(attribute='stdout') | join(' ') }}
    cd $combined_dir
    tar --exclude="./pg_wal/[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f]" --exclude="./backup_manifest" -czf base.tar.gz .
    if [ -d "$combined_dir/pg_wal" ]; then
      mkdir -p $combined_dir/pg_wal_only
      find $combined_dir/pg_wal -maxdepth 1 -type f ! -name "archive_status" ! -name "summaries" -exec cp {} $combined_dir/pg_wal_only/ \;
      tar -czf pg_wal.tar.gz -C $combined_dir/pg_wal_only .
      rm -rf $combined_dir/pg_wal_only
      find $combined_dir/pg_wal -maxdepth 1 -type f ! -name "archive_status" ! -name "summaries" -exec rm {} \;
    fi
    shopt -s extglob
    rm -rf !(base.tar.gz|pg_wal.tar.gz|backup_manifest)
  register: combine_backup_result
  retries: 3
  delay: 30
  until: combine_backup_result.rc == 0


- name: Debug the result of pg_combinebackup
  ansible.builtin.debug:
    msg: "Result of pg_combinebackup: {{ combine_backup_result.stdout }}"

# Step 7: Clean up temporary directories
- name: Remove temporary directories for extracted full and incremental backups
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ temp_full_backup_dir.path }}"
    - "{{ extracted_incrementals.results | map(attribute='stdout') | list }}"
